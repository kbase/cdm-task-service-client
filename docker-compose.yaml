# This docker-compose is for developer convenience, not for running in production.

services:

  kafka:
    image: apache/kafka-native:4.0.0
    ports:
      - 9092:9092
    environment:
      # default config
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      
      # custom config
      KAFKA_DELETE_TOPIC_ENABLE: true

  minio:
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    environment:
      MINIO_ROOT_USER: miniouser
      MINIO_ROOT_PASSWORD: miniopassword
    ports:
      - 9000:9000
      - 9001:9001
    command: 'server /data --console-address ":9001"'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      retries: 5

  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_URL: http://minio:9000
      MINIO_USER: miniouser
      MINIO_PWD: miniopassword
      MINIO_CTS_USER: cts
      MINIO_CTS_PWD: ctspassword
    entrypoint: /s3_policies/minio_create_bucket_entrypoint.sh
    volumes:
      - ./docker_compose/s3_policies:/s3_policies

  mongodb:
    image: mongo:7.0.14
    ports:
      - 27017:27017
    # environment:
    #  - MONGO_INITDB_ROOT_USERNAME=root
    #  - MONGO_INITDB_ROOT_PASSWORD=secret

  auth2:
    image: ghcr.io/kbase/auth2:0.7.1
    platform: linux/amd64
    ports:
      - 50001:8080
    environment:
       mongo_host: "mongodb:27017"
       test_mode_enabled: "true"
       identity_providers: ""
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "/kb/deployment/bin/start_auth2.sh"
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 1s
      # https://github.com/kbase/auth2/issues/443
      retries: 30

  httpstatus:
    image: ghcr.io/aaronpowell/httpstatus:main
    ports:
      - 5001:5001
    environment:
       ASPNETCORE_HTTP_PORTS: 5001

  cdm-task-service:
    image: ghcr.io/kbase/cdm-task-service:pr-356
    platform: linux/amd64
    ports:
      - 5000:5000
    depends_on:
      mongodb:
        condition: service_started
      minio-create-bucket:
        condition: service_completed_successfully
      kafka:
        condition: service_started
      auth2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 1s
      retries: 10
    environment:
      KBCTS_KBASE_AUTH2_URL: http://auth2:8080/testmode/
      KBCTS_KBASE_AUTH2_ADMIN_ROLES: CDM_TASK_SERVICE_ADMIN
      KBCTS_KBASE_STAFF_ROLE: KBASE_STAFF
      KBCTS_HAS_NERSC_ACCOUNT_ROLE: HAS_NERSC_ACCOUNT
      KBCTS_NERSC_JAWS_USER: fake
      KBCTS_NERSC_JAWS_REFDATA_DIR: fake
      KBCTS_SFAPI_CRED_PATH: fake
      KBCTS_NERSC_REMOTE_CODE_DIR: fake
      KBCTS_JAWS_URL: fake
      KBCTS_JAWS_TOKEN: fake
      KBCTS_JAWS_GROUP: fake
      KBCTS_S3_URL: http://minio:9000
      KBCTS_S3_EXTERNAL_URL: http://minio:9000
      KBCTS_VERIFY_S3_EXTERNAL_URL: false
      KBCTS_S3_ACCESS_KEY: cts
      KBCTS_S3_ACCESS_SECRET: ctspassword
      KBCTS_S3_ALLOW_INSECURE: true
      KBCTS_MONGO_HOST: mongodb://mongodb:27017
      KBCTS_MONGO_DB: cdmtaskservice
      # TODO MONGOAUTH need to add a user to the cdmtaskservice db before this works out
      #                of the box.
      #                The env vars in mongodb below only create a user in admin and only if
      #                the data directory is empty.
      # KBCTS_MONGO_USER: root
      # KBCTS_MONGO_PWD: secret
      KBCTS_MONGO_RETRYWRITES: false
      KBCTS_JOB_MAX_CPU_HOURS: 200
      KBCTS_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KBCTS_KAFKA_TOPIC_JOBS: cts-jobs
      KBCTS_CONTAINER_S3_LOG_DIR: cts-logs/container_logs
      KBCTS_SERVICE_ROOT_URL: https://superduperfake.com
      KBCTS_SERVICE_GROUP: fake
      KBCTS_SKIP_NERSC: true
      KBCTS_TEST_MODE: true
    volumes:
      - ./docker_compose/cts_helpers:/cts_helpers

  cdm-task-service_failing:
    # submitted jobs will fail because nersc isn't available'
    image: ghcr.io/kbase/cdm-task-service:pr-356
    platform: linux/amd64
    ports:
      - 5010:5010
    depends_on:
      mongodb:
        condition: service_started
      minio-create-bucket:
        condition: service_completed_successfully
      kafka:
        condition: service_started
      auth2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 1s
      retries: 10
    environment:
      KBCTS_PORT: 5010
      KBCTS_KBASE_AUTH2_URL: http://auth2:8080/testmode/
      KBCTS_KBASE_AUTH2_ADMIN_ROLES: CDM_TASK_SERVICE_ADMIN
      KBCTS_KBASE_STAFF_ROLE: KBASE_STAFF
      KBCTS_HAS_NERSC_ACCOUNT_ROLE: HAS_NERSC_ACCOUNT
      KBCTS_NERSC_JAWS_USER: fake
      KBCTS_NERSC_JAWS_REFDATA_DIR: fake
      KBCTS_SFAPI_CRED_PATH: fake
      KBCTS_NERSC_REMOTE_CODE_DIR: fake
      KBCTS_JAWS_URL: fake
      KBCTS_JAWS_TOKEN: fake
      KBCTS_JAWS_GROUP: fake
      KBCTS_S3_URL: http://minio:9000
      KBCTS_S3_EXTERNAL_URL: http://minio:9000
      KBCTS_VERIFY_S3_EXTERNAL_URL: false
      KBCTS_S3_ACCESS_KEY: cts
      KBCTS_S3_ACCESS_SECRET: ctspassword
      KBCTS_S3_ALLOW_INSECURE: true
      KBCTS_MONGO_HOST: mongodb://mongodb:27017
      KBCTS_MONGO_DB: cdmtaskservice
      # TODO MONGOAUTH need to add a user to the cdmtaskservice db before this works out
      #                of the box.
      #                The env vars in mongodb below only create a user in admin and only if
      #                the data directory is empty.
      # KBCTS_MONGO_USER: root
      # KBCTS_MONGO_PWD: secret
      KBCTS_MONGO_RETRYWRITES: false
      KBCTS_JOB_MAX_CPU_HOURS: 200
      KBCTS_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KBCTS_KAFKA_TOPIC_JOBS: cts-jobs
      KBCTS_CONTAINER_S3_LOG_DIR: cts-logs/container_logs
      KBCTS_SERVICE_ROOT_URL: https://superduperfake.com
      KBCTS_SERVICE_GROUP: fake
      KBCTS_SKIP_NERSC: true
    volumes:
      - ./docker_compose/cts_helpers:/cts_helpers
